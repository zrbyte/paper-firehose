name: "vdW materials"
description: "Topological materials, graphene, twisted stuff, vdW materials."

# Which feeds to process for this topic
feeds:
  - "cond-mat"
  - "nature"
  - "science"
  - "nat-mat"
  - "nat-nanotech"
  - "nat-phys"
  - "nat-chem"
  - "nat-ener"
  - "nat-rev-phys"
  - "pnas"
  - "prb"
  - "prl"
  - "prx"
  - "pr_res"
  - "nano-lett"
  - "acs-nano"
  - "science-adv"
  - "sci-rep"
  - "nat-comm"
  - "comm-phys"
  - "comm-mater"
  - "scipost"
  - "small"
  - "adv-mater"
  - "adv-sci"
  - "adv-func-mater"
  - "adv-phys-res"
  - "national-sci-rev"
  - "npj-2d-mater"
  - "npj-comp-mater"
  - "npj-qmat"

# Regex filter
filter:
  pattern: '(topolog[a-z]+)|\
            (graphit[a-z]+)|\
            (rhombohedr[a-z]+)|\
            (graph[a-z]+.*polytyp[a-z]+)|\
            (graphe[a-z]+)|\
            (ABC.+)|\
            (chalcog[a-z]+)|\
            (weyl)|\
            (dirac)|\
            (STM)|\
            (scan[a-z]+ tunne[a-z]+ micr[a-z]+)|\
            (scan[a-z]+ tunne[a-z]+ spectr[a-z]+)|\
            (scan[a-z]+ prob[a-z]+ micr[a-z]+)|\
            (MoS.+\d+|MoS\d+)|\
            (MoSe.+\d+|MoSe\d+)|\
            (MoTe.+\d+|MoTe\d+)|\
            (WS.+\d+|WS\d+)|\
            (WSe.+\d+|WSe\d+)|\
            (WTe.+\d+|WTe\d+)|\
            (Bi\d+Rh\d+I\d+|Bi.+\d+.+Rh.+\d+.+I.+\d+.+)|\
            (BiTeI)|\
            (BiTeBr)|\
            (BiTeCl)|\
            (ZrTe5|ZrTe.+5)|\
            (Pt2HgSe3|Pt.+2HgSe.+3)|\
            (jacuting[a-z]+)|\
            (flatband)|\
            (flat.*band)'
  fields: ["title", "summary"]

# Ranking configuration
ranking:
  query: >   # Natural-language ranking query used for sentence-transformers similarity
    graphene
    rhombohedral graphite
    ABC stacking
    STM
    scanning tunneling microscopy
    scanning probe
    moire
    twisted
    van der Waals
    topology
    Dirac
    chalcogenide

  # Optional additional negative phrases to downweight (list may be empty)
  negative_queries: [erratum, correction, reply, corrigendum]

  # Preferred authors. Names in this list get a ranking boost. Order: First name (or initial), Last name.
  preferred_authors: [Chen Guorui, A Yazdani, Avram Nurit, Markus Morgenstern, Ivan Brihuega, Pierre Mallet]
  priority_author_boost: 0.1

  # Sentence-Transformers model used for ranking (can be overridden per topic)
  model: "all-MiniLM-L6-v2" # with this model input text longer than 256 word pieces is truncated.

# Abstract fetch configuration
abstract_fetch:
  enabled: true
  rank_threshold: 0.25 # this overrides the global rank_threshold in config.yaml. Should be smaller than score_cutoff

# LLM summary configuration
llm_summary:
  enabled: true
  prompt: > # Uses ranking_query from the ranking configuration to assess topical relevance
    You are a world-class condensed-matter researcher specializing in 2D van der Waals materials,
    STM, and charge transport in graphene/graphite systems. 
    Focus on topical relevance (graphene, rhombohedral graphite,
    moiré/twisted systems, STM), novelty/impact, and experimental/theory significance.
    Be concise and expert-focused. Keep text concise and information-dense.
    Avoid using superlatives and other over-the-top language.
    CRITICAL: Return ONLY valid JSON with the exact structure specified.
    No markdown formatting, no explanations, no text before or after the JSON object.
    Required JSON structure:
    {
      "summary": "Brief technical summary of the paper", three sentences.
      "topical_relevance": "Assessment of relevance to: {ranking_query}, in one sentence",
      "novelty_impact": "Evaluation of novelty and potential impact", in two sentences.
    }
  # Cutoffs: strongest cutoff applies (the one returning the fewest entries)
  # score_cutoff: minimum cosine similarity (0.0–1.0)
  score_cutoff: 0.3
  # Top N papers to return, hard cutoff after score_cutoff
  top_n: 10

# Output configuration
output:
  filename: "results_primary.html"
  filename_ranked: "results_primary_ranked.html"
  filename_summary: "results_primary_summary.html"
  archive: true # archive the output file to the "matched_entries_history.db" database
