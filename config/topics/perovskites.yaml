name: "Perovskites"
description: "Perovskite solar cells, photoelectrochemistry, stability and efficiency advances"

# Which feeds to process for this topic
feeds:
  - "cond-mat"
  - "nature"
  - "science"
  - "nat-mat"
  - "nat-nanotech"
  - "nat-phys"
  - "nat-chem"
  - "nat-ener"
  - "nat-catal"
  - "nat-chem-eng"
  - "nat-rev-phys"
  - "pnas"
  - "joule"
  - "prb"
  - "prl"
  - "prx"
  - "pr_res"
  - "nano-lett"
  - "acs-nano"
  - "acs-en-lett"
  - "en-env-sci"
  - "science-adv"
  - "sci-rep"
  - "nat-comm"
  - "comm-phys"
  - "comm-mater"
  - "scipost"
  - "small"
  - "adv-mater"
  - "adv-sci"
  - "adv-func-mater"
  - "adv-phys-res"
  - "national-sci-rev"
  - "npj-2d-mater"
  - "npj-comp-mater"
  - "npj-qmat"

# Regex filter
filter:
  pattern: "(perovskit.*photoelec.*)|\
            (perovskit.*photocatho.*)|\
            (perovskit.*photoano.*)|\
            (organi.*photoelec.*)|\
            (solar.*water.*splitt.*)|\
            (photoelectrochem.*water.*splitt.*)|\
            (photoelectrochem.*biom.*oxid.*)|\
            (photoelectrochem.*valu.*add.*)|\
            (perovsk.*sola.*cell)|\
            (organi.*sola.*cell)"
  fields: ["title", "summary"]

# Ranking configuration
ranking:
  prompt: >
    You are a domain expert on perovskite solar cells and photoelectrochemistry.
    Emphasize entries that materially advance stability, efficiency, interface physics/chemistry,
    and catalysis mechanisms. Prefer clear methodological advances and results with high potential impact.
    Be concise and expert-focused. Keep text concise and information-dense.
    Avoid using superlatives and other over-the-top language.
    CRITICAL: Return ONLY valid JSON with the exact structure specified.
    No markdown formatting, no explanations, no text before or after the JSON object.
  # Natural-language ranking query used for sentence-transformers similarity
  query: "Perovskites, solar cells, photoelectrochemistry, solar water splitting, solar fuels"

  # Optional additional negative phrases to downweight (list may be empty)
  negative_queries: [erratum, correction, reply, corrigendum]

  # Preferred authors. Names in this list get a ranking boost. Order: First name (or initial), Last name.
  preferred_authors: [Matyas Daboczi]
  priority_author_boost: 0.20

  # Sentence-Transformers model used for ranking (can be overridden per topic)
  model: "all-MiniLM-L6-v2"

  # Cutoffs: strongest cutoff applies (the one returning the fewest entries)
  # - score_cutoff: minimum cosine similarity (0.0â€“1.0); default 0.2
  score_cutoff: 0.2
  top_n: 5

# Abstract fetch configuration
abstract_fetch:
  enabled: true
  rank_threshold: 0 # this overrides the global rank_threshold in config.yaml

# Output configuration
output:
  filename: "results_perovskites.html"
  filename_ranked: "results_perovskites_ranked.html"
  filename_summary: "results_perovskites_summary.html"
  archive: true # archive the output file to the "matched_entries_history.db" database
