name: "Rhombohedral Graphite"
description: "ABC-stacked graphene multilayers"

feeds:
  - "cond-mat"
  - "nature"
  - "science"
  - "nat-mat"
  - "nat-nanotech"
  - "nat-phys"
  - "nat-rev-phys"
  - "pnas"
  - "prb"
  - "prl"
  - "prx"
  - "pr_res"
  - "nano-lett"
  - "acs-nano"
  - "acs-en-lett"
  - "science-adv"
  - "sci-rep"
  - "nat-comm"
  - "comm-phys"
  - "comm-mater"
  - "scipost"
  - "small"
  - "adv-mater"
  - "adv-sci"
  - "adv-func-mater"
  - "adv-phys-res"
  - "national-sci-rev"
  - "npj-2d-mater"
  - "npj-comp-mater"
  - "npj-qmat"

filter:
  pattern: "(rhombohedr[a-z]+.*graph[a-z]+)|\
            (graph[a-z]+.*polytyp[a-z]+)|\
            (ABC.*graph[a-z]+)|\
            (ABC.*trilay[a-z]+)|\
            (ABCA.*tetralay[a-z]+)|\
            (ABCB.*tetralay[a-z]+)|\
            (tetralay[a-z]+.*graph[a-z]+)|\
            (pentalay[a-z]+.*graph[a-z]+)|\
            (graph[a-z]+.*pentalay[a-z]+)|\
            (hexalay[a-z]+.*graph[a-z]+)|\
            (graph[a-z]+.*hexalay[a-z]+)|\
            (heptalay[a-z]+.*graph[a-z]+)|\
            (graph[a-z]+.*heptalay[a-z]+)"
  fields: ["title", "summary"]

ranking:
  query: >   # Natural-language ranking query used for sentence-transformers similarity
    Rhombohedral graphite, rhombohedral stacking, rhombohedral multilayer graphene,
    ABC-stacked graphene, ABC stacking, trilayer, tetralayer, pentalayer, hexalayer,
    heptalayer graphene, chiral graphene

  # Optional additional negative phrases to downweight (list may be empty)
  negative_queries: [erratum, correction, reply, corrigendum]

  # Preferred authors. Names in this list get a ranking boost. Order: First name (or initial), Last name.
  preferred_authors: [Chen Guorui, A Yazdani, Avram Nurit, Markus Morgenstern]
  priority_author_boost: 0.20
  
  # Sentence-Transformers model used for ranking (can be overridden per topic)
  model: "all-MiniLM-L6-v2"

# Abstract fetch configuration
abstract_fetch:
  enabled: true
  rank_threshold: 0.2 # this overrides the global rank_threshold in config.yaml. Should be smaller than score_cutoff

# LLM summary configuration
llm_summary:
  enabled: true
  prompt: > # Uses ranking_query from the ranking configuration to assess topical relevance
    You are a world-class condensed-matter researcher with deep expertise in rhombohedral graphite
    (ABC-stacked graphene multilayers) and related STM/transport phenomena. 
    Prioritize entries that directly concern ABC/rhombohedral stacking, few-layer graphene
    with rhombohedral domains, or unambiguous experimental/theory advances in this subfield.
    Be concise and expert-focused. Keep text concise and information-dense.
    Avoid using superlatives and other over-the-top language.
    CRITICAL: Return ONLY valid JSON with the exact structure specified.
    No markdown formatting, no explanations, no text before or after the JSON object.
    Required JSON structure:
    {
      "summary": "Brief technical summary of the paper",
      "topical_relevance": "Assessment of relevance to: {ranking_query}, in one sentence",
      "novelty_impact": "Evaluation of novelty and potential impact"
    }
  # Cutoffs: strongest cutoff applies (the one returning the fewest entries)
  # - score_cutoff: minimum cosine similarity (0.0â€“1.0)
  score_cutoff: 0.3
  top_n: 10

output:
  filename: "rg_filtered_articles.html"
  filename_ranked: "rg_filtered_articles_ranked.html"
  filename_summary: "rg_filtered_articles_summary.html"
  archive: true
