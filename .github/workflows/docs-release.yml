name: Publish Docs

on:
  release:
    types:
      - published

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-docs
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PAPER_FIREHOSE_DATA_DIR: ${{ github.workspace }}/.paper_firehose
      CONFIG_PATH: ${{ github.workspace }}/.paper_firehose/config/config.yaml
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install documentation dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .[docs]

      - name: Load databases from data branch
        run: |
          set -euo pipefail
          mkdir -p "$PAPER_FIREHOSE_DATA_DIR" assets
          echo "=== Loading databases from data branch ==="
          git fetch origin data

          load_db() {
            local remote_path="$1"
            local dest="$2"
            local label="$3"
            if git show "origin/data:${remote_path}" >"${dest}" 2>/dev/null; then
              echo "✅ Loaded ${label} from data branch into ${dest}"
              ls -lh "${dest}"
            else
              echo "ℹ️  ${label} not found in data branch; skipping copy"
              rm -f "${dest}"
            fi
          }

          load_db "assets/all_feed_entries.latest.db" "$PAPER_FIREHOSE_DATA_DIR/all_feed_entries.db" "all_feed_entries.db"
          load_db "assets/matched_entries_history.latest.db" "$PAPER_FIREHOSE_DATA_DIR/matched_entries_history.db" "matched_entries_history.db"
          load_db "assets/papers.latest.db" "$PAPER_FIREHOSE_DATA_DIR/papers.db" "papers.db"

      - name: Populate runtime config
        run: |
          set -euo pipefail

          CONFIG_SRC="$GITHUB_WORKSPACE/github_actions_config"
          CONFIG_DEST="$PAPER_FIREHOSE_DATA_DIR/config"

          if [ -d "$CONFIG_SRC" ]; then
            mkdir -p "$CONFIG_DEST"
            rsync -a --delete --exclude '.DS_Store' "$CONFIG_SRC"/ "$CONFIG_DEST"/
            echo "✅ Copied workflow config from $CONFIG_SRC to $CONFIG_DEST"
          else
            echo "ℹ️  github_actions_config directory not found; using defaults bundled with the package"
          fi

      - name: Run minimal pipeline for HTML outputs
        run: |
          set -euo pipefail

          echo "=== Running Paper Firehose pipeline prior to docs build ==="
          paper-firehose --config "$CONFIG_PATH" filter
          paper-firehose --config "$CONFIG_PATH" rank
          paper-firehose --config "$CONFIG_PATH" html

      - name: Build Sphinx HTML
        run: sphinx-build -b html docs docs/_build/html

      - name: Prepare site
        run: |
          set -euo pipefail
          rm -rf site
          mkdir -p site
          if [ -d docs/_build/html ]; then
            cp -R docs/_build/html/. site/
          fi
          if [ -d "$PAPER_FIREHOSE_DATA_DIR/html" ]; then
            cp "$PAPER_FIREHOSE_DATA_DIR"/html/*.html site/ 2>/dev/null || true
            cp -r "$PAPER_FIREHOSE_DATA_DIR"/html site/html || true
          fi
          cp history_viewer*.html site/ 2>/dev/null || true
          touch site/.nojekyll

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
